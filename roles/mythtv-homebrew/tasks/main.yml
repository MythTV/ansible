# roles/mythtv-homebrew/tasks/main.yml

---
- name: Get homebrew install prefix
  command: brew --prefix
  register: hb_out

- name: Set pkgmgr_prefix fact
  set_fact:
    pkgmgr_prefix: '{{ hb_out.stdout }}'

- name: Specify a mariadb/mysql version to install
  set_fact:
    database_version: mariadb
  when: database_version is undefined

- name: Check if this is a mariadb based install
  set_fact:
    database_name: mariadb
  when: database_version is search("mariadb")

- name: Check if this is a mysql based install
  set_fact:
    database_name: mysql
  when: database_version is search("mysql")

- name: Create a list of compilers and build essentials
  set_fact:
    homebrew_pkg_list:
      - ccache
      - nasm
      - autoconf
      - automake
      - 'pkg-config'
      - cmake
      - gpatch
      - ninja
      - gperf
      - meson

# note that on homebrew, mysql-client
# is required to get the python mysqlclient working
- name: Add essential libraries
  set_fact:
    homebrew_pkg_list:
      - '{{ homebrew_pkg_list }}'
      - libxml2
      - libxslt
      - taglib
      - exiv2
      - libbluray
      - lzo
      - libsamplerate
      - libzip
      - zlib
      - libiconv
      - glslang
      - openssl
      - '{{ database_version }}'
      - 'mysql-client'

- name: Add optional libraries
  set_fact:
    homebrew_pkg_list:
      - '{{ homebrew_pkg_list }}'
      - libvpx
      - x264
      - x265
      - xvid
      - libvorbis
      - flac
      - faac
      - freetype
      - fftw
      - libass
      - aom
      - dav1d
      - minizip
      - ant
      - libhdhomerun
      - libx11
      - php
      - 'sound-touch'
      - libcec
      - zstd
      - 'vulkan-headers'
      - 'vulkan-tools'
      - 'vulkan-loader'
      - 'molten-vk'
      - libdiscid
      - expat

- name: Develop a Python package version suffix
  set_fact:
    python_package_suffix:
      '{{ ansible_python.version.major }}{{ ansible_python.version.minor }}'
    python_exe_suffix:
      '{{ ansible_python.version.major }}.{{ ansible_python.version.minor }}'

- name: Add python essentials
  set_fact:
    homebrew_pkg_list:
      - '{{ homebrew_pkg_list }}'
      - 'python@{{ python_exe_suffix }}'
      - python-setuptools
      - virtualenv
      - pyenv-virtualenv

- name: Add perl essentials
  set_fact:
    homebrew_pkg_list:
      - '{{ homebrew_pkg_list }}'
      - perl
      - perl-dbd-mysql
      - cpanminus
      - libdbi
      - libiodbc

- name: Utility packages from homebrew
  set_fact:
    homebrew_pkg_list:
      - '{{ homebrew_pkg_list }}'
      - make
      - libtool
      - lame
      - gnutls
      - 'gnu-sed'
      - curl
      - texinfo
      - texi2html
      - 'font-dejavu'
      - 'font-liberation'

- name: Print final list of packages
  debug:
    msg:
      '{{ lookup("flattened", homebrew_pkg_list) }}'

- name: Install packages
  become: false
  homebrew:
    name:
      '{{ lookup("flattened", homebrew_pkg_list) }}'


- name: Get mysqlclient libs
  shell:
    export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:"{{ pkgmgr_prefix }}/opt/mysql-client/lib/pkgconfig/" &&
    {{ pkgmgr_prefix }}/bin/pkg-config --libs mysqlclient
  register: libs_out

- name: Set mysqlclient_ldflags fact
  set_fact:
    mysqlclient_ldflags: '{{ libs_out.stdout }}'

- name: Get mysqlclient cflags
  shell:
    export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:"{{ pkgmgr_prefix }}/opt/mysql-client/lib/pkgconfig/" &&
    {{ pkgmgr_prefix }}/bin/pkg-config --cflags mysqlclient
  register: cflag_out

- name: Set mysqlclient_cflags fact
  set_fact:
    mysqlclient_cflags: '{{ cflag_out.stdout }}'

- name: Create a list of perl modules
  set_fact:
    cpanm_pkg_list:
      - Date::Manip
      - DateTime::Format::ISO8601
      - DBI
      - Image::Size
      - IO::Socket::INET6
      - JSON
      - LWP
      - HTTP::Request::AsCGI
      - Net::UPnP
      - Net::SSLeay
      - SOAP::Lite
      - XML::XPath
      - XML::Simple
      - FindBin
      - IPC::Cmd

- name: Print final list of cpanm packages
  debug:
    msg:
      '{{ lookup("flattened", cpanm_pkg_list) }}'

- name: Cpanm - install perl modules  # noqa ignore-errors
  become: false
  command: cpanm
    --mirror 'http://cpan.cpantesters.org/'
    --force
    {{ cpanm_pkg_list | join(' ') }}
  ignore_errors: yes
  environment:
    OPENSSL_PREFIX: "{{ pkgmgr_prefix }}/opt/openssl/"

# vim: set expandtab tabstop=2 shiftwidth=2 smartindent noautoindent colorcolumn=2:
