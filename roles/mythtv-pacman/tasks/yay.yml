#!/usr/bin/env ansible-playbook

# Experimental: to run these tasks, change the 'normal' command to:
#
#   ./mythtv.yml --extra-vars='{"yay_flag":true}' --limit=localhost
#

---

- name: define the AUR yay repository and buld directory
  ansible.builtin.set_fact:
    yay_repository: 'https://aur.archlinux.org/yay.git'
    yay_build_directory: '/tmp/yay_build'

- name: check if the yay command exists (assumes that yay is in $PATH)
  ansible.builtin.command: yay
  check_mode: false
  changed_when: false
  register: yay_response
  ignore_errors: true

- ansible.builtin.debug:
    msg: "yay wasn't in your $PATH, assuming a copy is needed"
  when: yay_response is defined and yay_response.failed

- name: download the yay repository
  become: false
  ansible.builtin.git:
    repo: '{{ yay_repository }}'
    dest: '{{ yay_build_directory }}'
  register: git_response
  ignore_errors: true
  when: yay_response is defined and yay_response.failed

- ansible.builtin.debug:
    msg: 'The yay repository has been downloaded to {{ yay_build_directory }}.'
  when: git_response is defined and not git_response.failed

- ansible.builtin.debug:
    msg:
      - 'Unable to download yay repository from {{ yay_repository }}'
      - '{{ git_response.msg }}'
  when: git_response is defined and git_response.failed

# This can't work because makepkg must not run as root AND it prompts for the
# sudo password after starting. The ansible.builtin.expect module was tested
# but doesn't seem to work. It is possible to change PACMAN_AUTH=(/usr/bin/true
# but that seems unsafe.)
- name: make the yay package
  become: false
  ansible.builtin.command: makepkg -si
  args:
    chdir: ./yay
  tags: never

# This is also turned off because pacman calls makepkg. See the task above for
# reasons.
- name: add the AUR packages NOT CLEAR IF extra_args MUST BE INCLUDED
  become: false
  community.general.pacman:
    name: '{{ item }}'
    state: present
    executable: yay
    extra_args: '--builddir {{ yay_build_directory }}'
  loop:
    - libhdhomerun
    - perl-net-upnp
    - python-timeout-decorator
    - python-requests-cache
  tags: never

- name: MANUAL ACTION ITEM
  ansible.builtin.debug:
    msg:
      - 'You can use: makepkg -si from {{ yay_build_directory }} to build yay.'
      - 'Then manually run the following commands to add AUR packages:'
  when: git_response is defined and not git_response.failed

- name: MANUAL ACTION ITEM
  ansible.builtin.debug:
    msg:
      - "Because the download from: {{ yay_repository }} failed, you'll"
      - "need to install yay MANUALLY, THEN run:"
  when: git_response is defined and git_response.failed

- name: MANUAL ACTION ITEM
  ansible.builtin.debug:
    msg: 'yay -S {{ item }}'
  loop:
    - libhdhomerun
    - perl-net-upnp
    - python-timeout-decorator
    - python-requests-cache

...

# Notes, to get yay:
# pacman -S --needed git base-devel (done in main.yml)
# git clone https://aur.archlinux.org/yay.git (done in here)
# cd yay
# makepkg -si (can't do)

# vim: set expandtab tabstop=2 shiftwidth=2 smartindent noautoindent colorcolumn=2,80:
