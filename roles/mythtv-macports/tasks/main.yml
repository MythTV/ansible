# roles/mythtv-macports/tasks/main.yml

---

- name: Get macports install prefix
  shell: dirname $(dirname $(which port))
  register: mp_out

- name: Set pkgmgr_prefix fact
  set_fact:
    pkgmgr_prefix: '{{ mp_out.stdout }}'

- name: Specify a mariadb/mysql version to install
  set_fact:
    database_version: mysql8
  when:
    database_version is undefined
- name: Check if this is a mariadb based install
  set_fact:
    database_name: mariadb
  when: database_version is search("mariadb")
- name: Check if this is a mysql based install
  set_fact:
    database_name: mysql
  when: database_version is search("mysql")

- name: Specify a perl version to install
  set_fact:
    perl_version: 5.34
  when:
    perl_version is undefined

- name: Setup macports mariadb/mysql variant variables
  set_fact:
    mysql_variant: "{{ database_version | regex_replace('-') | regex_replace('\\.', '_') }}"

- name: Create a list of compilers and build essentials
  set_fact:
    macports_pkg_list:
      - ccache
      - nasm
      - autoconf
      - automake
      - pkgconfig
      - cmake
      - gpatch
      - ninja

- name: Add essential libraries
  set_fact:
    macports_pkg_list:
      - '{{ macports_pkg_list }}'
      - libxml2
      - libxslt
      - taglib
      - exiv2
      - libbluray
      - lzo2
      - libsamplerate
      - libzip
      - libmpeg2
      - '{{ database_version }}'

- name: Add optional libraries
  set_fact:
    macports_pkg_list:
      - '{{ macports_pkg_list }}'
      - openssl
      - libvpx
      - x264
      - x265
      - XviD
      - libvorbis
      - flac
      - faac
      - freetype
      - 'fftw-3'
      - libass
      - php84
      - aom
      - dav1d
      - minizip
      - 'apache-ant'
      - hdhomerun
      - 'xorg-libX11'
      - 'liberation-fonts'
      - 'dejavu-fonts'
      - soundtouch
      - libdvdcss

- name: Develop a Python package version suffix
  set_fact:
    python_package_suffix:
      '{{ ansible_python.version.major }}{{ ansible_python.version.minor }}'
    python_exe_suffix:
      '{{ ansible_python.version.major }}.{{ ansible_python.version.minor }}'

- name: Add python essentials
  set_fact:
    macports_pkg_list:
      - '{{ macports_pkg_list }}'
      - python{{ python_package_suffix }}
      - py{{ python_package_suffix }}-pip
      - py{{ python_package_suffix }}-virtualenv

- name: Add perl essentials
  set_fact:
    macports_pkg_list:
      - '{{ macports_pkg_list }}'
      - 'perl{{ perl_version }}'
      - 'p{{ perl_version }}-date-manip'
      - 'p{{ perl_version }}-datetime-format-iso8601'
      - 'p{{ perl_version }}-dbi'
      - 'p{{ perl_version }}-image-size'
      - 'p{{ perl_version }}-io-socket-inet6'
      - 'p{{ perl_version }}-json'
      - 'p{{ perl_version }}-libwww-perl'
      - 'p{{ perl_version }}-http-request-ascgi'
      - 'p{{ perl_version }}-net-upnp'
      - 'p{{ perl_version }}-soap-lite'
      - 'p{{ perl_version }}-xml-xpath'
      - 'p{{ perl_version }}-xml-simple'

- name: Utility packages from ports
  set_fact:
    macports_pkg_list:
      - '{{ macports_pkg_list }}'
      - gmake
      - libtool
      - lame
      - gnutls
      - gsed
      - texinfo
      - texi2html

- name: Print final list of ports
  debug:
    msg:
      '{{ lookup("flattened", macports_pkg_list) }}'

- name: Install packages
  macports:
    name:
      '{{ lookup("flattened", macports_pkg_list) }}'
    update_cache: true

- name: Install p{{ perl_version }}-dbd-mysql  # noqa name[template]
  macports:
    name: 'p{{ perl_version }}-dbd-mysql'
    variant: +{{ mysql_variant }}

- name: Select the installed version of mariadb/mysql and python
  command: 'port select --set {{ item.group }} {{ item.version }}'
  with_list:
    - { group: mysql, version: '{{ database_version }}' }
    - { group: python, version: 'python{{ python_package_suffix }}' }
    - { group: python3, version: 'python{{ python_package_suffix }}' }
    - { group: pip3, version: 'pip{{ python_package_suffix }}' }
    - { group: php, version: 'php84' }
    - { group: virtualenv, version: 'virtualenv{{ python_package_suffix }}' }

- name: Get mysqlclient libs
  shell:
    export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:{{ pkgmgr_prefix }}/lib/{{ database_version }}/pkgconfig/ &&
    {{ pkgmgr_prefix }}/bin/pkg-config --libs mysqlclient
  register: libs_out

- name: Set mysqlclient_ldflags fact
  set_fact:
    mysqlclient_ldflags: '{{ libs_out.stdout }}'

- name: Get mysqlclient cflags
  shell:
    export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:{{ pkgmgr_prefix }}/lib/{{ database_version }}/pkgconfig/ &&
    {{ pkgmgr_prefix }}/bin/pkg-config --cflags mysqlclient
  register: cflag_out

- name: Set mysqlclient_cflags fact
  set_fact:
    mysqlclient_cflags: '{{ cflag_out.stdout }}'

# vim: set expandtab tabstop=2 shiftwidth=2 smartindent noautoindent colorcolumn=2:
