# roles/mythtv/tasks/main.yml

# WIP: a single set of tasks for ALL package managers/distributions/versions.
# Run any special setup tasks, develop a list of package names for the above
# and then install them.

---

- name: Set Single Role for all package managers, distibutions and versions
  set_fact:
    pkgmgr: '{{ ansible_pkg_mgr }}'
    distro: '{{ ansible_distribution | regex_replace("[/ ]", "_") | lower }}'
    versno: '{{ ansible_distribution_major_version | int }}'
    dir:    '{{ playbook_dir }}/roles/mythtv'
    packages_were_loaded: false

- name: See if special setup tasks exist
  stat:
    path:  '{{ dir }}/tasks/{{ pkgmgr }}_{{ distro }}.yml'
  register: special_stat_results

- name: Run special setup tasks
  include_tasks:
    file: '{{ pkgmgr }}_{{ distro }}.yml'
  when: special_stat_results.stat.exists

- name: 'Load packages for "{{ pkgmgr }}/{{ distro }}/{{ versno }}"'  # noqa name[template]
  include_vars:
    file: '{{ item }}'
  with_first_found:
    - '{{ pkgmgr }}/{{ distro }}/{{ versno }}.yml'
    - '{{ pkgmgr }}/{{ distro }}/{{ ansible_distribution_release | lower }}'
    - '{{ pkgmgr }}/{{ distro }}/rolling.yml'
    - missing.yml
  register: include_vars_results

- name: Mark package loaded
  set_fact:
    packages_were_loaded: true
  when:
    - include_vars_results.results[0] is defined
    - include_vars_results.results[0].failed == false
    - include_vars_results.results[0].item is not search("missing.yml")

- name: 'The list of packages is missing. {{ manual_action_text }}'
  debug:
    msg: >-
      No {{ pkgmgr }}/{{ distro }}/{{ versno }}.yml file. One can
      be copied and adjusted for a new release. Files are stored under:
      {{ playbook_dir }}/roles/mythtv/vars.
      Openining an issue at: https://github.com/MythTV/ansible/issues is the
      correct way to have new package lists added to the project. Be sure to
      add the output of the: {{ instruction_text }} section from this play.
  when: not packages_were_loaded

- name: Exit because no packages were found
  meta: end_play
  when: not packages_were_loaded

- name: Add qt5 packages
  set_fact:
    packages:
      - '{{ packages }}'
      - '{{ qt5_packages }}'
  when: (qt6 is undefined or not qt6) and qt5_packages is defined

- name: Add qt6 packages
  set_fact:
    packages:
      - '{{ packages }}'
      - '{{ qt6_packages }}'
  when: qt6 is defined and qt6 and qt6_packages is defined

- name: Flatten package lists
  set_fact:
    packages: '{{ packages | flatten() }}'

- name: Final package list
  debug:
    msg: '{{ packages }}'

- name: Install the packages
  package:
    name: '{{ packages }}'

...

# vim: set expandtab tabstop=2 shiftwidth=2 smartindent noautoindent colorcolumn=2,80:
