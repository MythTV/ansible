# roles/mythtv/tasks/main.yml

# WIP: a single set of tasks for ALL package managers/distributions/versions.
# Run any special setup tasks, develop a list of package names for the above
# and then install them.

---

- name: Set Single Role for all package managers, distibutions and versions
  set_fact:
    sr_pkgmgr: '{{ ansible_pkg_mgr }}'
    sr_distro: '{{ ansible_distribution | regex_replace("[/ ]", "_") | lower }}'
    sr_versno: '{{ ansible_distribution_major_version }}'
    sr_dir:    '{{ playbook_dir }}/roles/mythtv'

- name: Set version to rolling for Archlinux and SUSE Tumbleweed
  set_fact:
    sr_versno: 'rolling'
  when: sr_distro == 'archlinux' or sr_distro == 'opensuse_tumbleweed'

- name: If a Debian version is not numeric, use its codename as a version
  set_fact:
    sr_versno: '{{ ansible_distribution_release | lower }}'
  when:
    - ansible_distribution == 'Debian'
    - ansible_distribution_major_version | type_debug != "int"

- name: See if special setup tasks exist
  stat:
    path:  '{{ sr_dir }}/tasks/{{ sr_pkgmgr }}_{{ sr_distro }}.yml'
  register: special_stat_results

- name: Run special setup tasks
  include_tasks:
    file: '{{ sr_pkgmgr }}_{{ sr_distro }}.yml'
  when: special_stat_results.stat.exists

- name: See if a list of packages has been created
  stat:
    path: '{{ sr_dir }}/vars/{{ sr_pkgmgr }}/{{ sr_distro }}/{{ sr_versno }}.yml'
  register: package_stat_results

- name: 'The list of packages is missing. {{ manual_action_text }}'
  debug:
    msg: >-
      No {{ sr_pkgmgr }}/{{ sr_distro }}/{{ sr_versno }}.yml file. One can
      be copied and adjusted for a new release. Files are stored under:
      {{ playbook_dir }}/roles/mythtv/vars.
      Openining an issue at: https://github.com/MythTV/ansible/issues is the
      best way to have new package lists added to the project. Be sure to add
      the output of the: {{ instruction_text }} section from this play.
  when: not package_stat_results.stat.exists or use_old_rules_failure_test

- name: Exit because of the above
  meta: end_play
  when: not package_stat_results.stat.exists

- name: 'Load packages for "{{ sr_pkgmgr }}/{{ sr_distro }}/{{ sr_versno }}"'  # noqa name[template]
  include_vars:
    dir: '{{ sr_pkgmgr }}/{{ sr_distro }}'
    files_matching: '^{{ sr_versno }}.yml'

- name: Add qt5 packages
  set_fact:
    packages:
      - '{{ packages }}'
      - '{{ qt5_packages }}'
  when: (qt6 is undefined or not qt6) and qt5_packages is defined

- name: Add qt6 packages
  set_fact:
    packages:
      - '{{ packages }}'
      - '{{ qt6_packages }}'
  when: qt6 is defined and qt6 and qt6_packages is defined

- name: Final package list
  debug:
    var: lookup('flattened', packages)

- name: Install the packages
  package:
    name: "{{ lookup('flattened', packages) }}"

...

# vim: set expandtab tabstop=2 shiftwidth=2 smartindent noautoindent colorcolumn=2,80:
